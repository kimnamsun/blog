{"componentChunkName":"component---src-templates-post-jsx","path":"/contents/posts/2022-04-01/","result":{"data":{"site":{"siteMetadata":{"title":"kimnamsun"}},"markdownRemark":{"id":"f1e4e298-5cae-5a57-8798-17ababf157e0","excerpt":"프론트앤드 스터디에서 진행한 OSI 7계층 중 1계층에 대한 발표자료 1계층 (물리계층, Physical Layer) 송신측에서 마지막으로 수행, 수신측에서 가장 먼저 수행되는 계층  1계층의 역할 을 알아보기 전에, 네트워크 통신을 한다는건 뭘까? 0과 1을 잘 주고받을 수 있다. 왜 0과 1일까? → 모든 파일과 프로그램은 0과 1의 나열이기 때문에.…","html":"<blockquote>\n<p>프론트앤드 스터디에서 진행한 OSI 7계층 중 1계층에 대한 발표자료</p>\n</blockquote>\n<h1>1계층 (물리계층, Physical Layer)</h1>\n<ul>\n<li>송신측에서 마지막으로 수행, 수신측에서 가장 먼저 수행되는 계층</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/fc9fdd09-d01c-46b6-b666-0fdd3dfe39fb/image.png\"></p>\n<h2>1계층의 역할</h2>\n<p>을 알아보기 전에,</p>\n<p><strong>네트워크 통신을 한다는건 뭘까</strong>?</p>\n<ul>\n<li>0과 1을 잘 주고받을 수 있다.</li>\n<li>왜 0과 1일까? → 모든 파일과 프로그램은 0과 1의 나열이기 때문에.</li>\n<li>0과 1은 비트이다.</li>\n<li>비트는 신호로 주고 받을 수 있다.</li>\n</ul>\n<p><strong>물리계층의 역할</strong></p>\n<ul>\n<li>물리계층은 통신매체를 통해 0, 1이 잘 전달될 수 있도록 하는 역할을 한다.</li>\n<li>데이터 전달 → 1계층 역할</li>\n<li>전달 전과 전달 후 의 일 → 2계층 이상의 역할</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/446bd566-486e-42bf-bdc9-aac0d456bfd3/image.png\"></p>\n<p><strong>1번 컴퓨터에서 2번 컴퓨터로 데이터를 전송하려면?</strong></p>\n<ul>\n<li>기기와 기기를 케이블로 연결</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/8d533456-6c46-4de0-b1f9-815084744c4f/image.png\"></p>\n<p>케이블</p>\n<ul>\n<li>통신 매체 (기기와 기기 사이를 연결해서 신호가 지나갈 수 있게 연결다리, 파이프 역할)</li>\n</ul>\n<h3>📝 정리</h3>\n<ul>\n<li><strong>물리계층은 통신매체를 통해 신호를 전달하는 역할을 한다.</strong></li>\n</ul>\n<hr>\n<h2>신호</h2>\n<ul>\n<li>신호에는 아날로그 신호, 디지털 신호가 있다.</li>\n</ul>\n<h3>아날로그 신호 (0과 1 사이 어딘가의 값, 딱 떨어지지 않는다.)</h3>\n<ul>\n<li>주파수에 따라 전송되는 신호</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/310b1015-7114-41c8-a03a-451948add571/image.png\"></p>\n<h3>디지털 신호 (0이거나 1이거나, 0일땐 off, 1일땐 on)</h3>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/269e88b4-3eca-4ae9-b96d-db7887b4be64/image.png\"></p>\n<h3>주파수</h3>\n<ul>\n<li>단위는 헤르츠</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/0ed5c5f8-8603-467e-9e4b-ffc83bffb31e/image.png\">\n→ 파동이 진행되는 내내 주파수가 4인 파동 (1초동안 4번의 파ㅇ도)</p>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/4f6fbc0f-0d4f-4471-ad50-9b0cff8133d3/image.png\">\n→ 파동이 진행되는 동안 주파수 값이 계속 변하는 파동</p>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/8d533456-6c46-4de0-b1f9-815084744c4f/image.png\">\n→ 1~5hz만 통과시킬 수 있는 케이블</p>\n<ul>\n<li>이 케이블을 통해 이 주파수가 흘러들어간다고 하면, 1~5hz만 통과시키기 때문에 보낸 데이터와 받은 데이터가 달라지게 된다.</li>\n</ul>\n<p>그러면 어떻게 해야할까?</p>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/269e88b4-3eca-4ae9-b96d-db7887b4be64/image.png\"></p>\n<p>→ 이런 주파수만 주고받을 수 있다면 데이터를 정상적으로 주고받을 수 있다.</p>\n<p>→ 0 ~ 무한대 hz의 주파수 범위를 가진다.</p>\n<p>→ 따라서 이 신호를 통과시킬 수 있는 통신매체는 없다.</p>\n<p><strong>그렇다면 아날로그 신호로 바꿔서 전송해야한다.</strong></p>\n<ol>\n<li>송신 측에서는 원본 데이터를 아날로그 신호로 바꿔서 케이블을 통해 내보낸다. (인코딩)</li>\n<li>수신측에서는 그 아날로그 신호를 받아서 다시 원본데이터로 해석한다. (디코딩)</li>\n</ol>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/c805a30d-342b-46a0-a3c4-f47d2262718f/image.png\"></p>\n<ul>\n<li>송신측과 수신측이 있다.</li>\n<li>송신측에서 0101 0101이라는 원본데이터를 보내려고 한다.</li>\n<li>이 원본데이터를 인코더를 통해 아날로그 신호로 변환한다.</li>\n<li>변환한 아날로그 신호를 전선(케이블)을 통해 전달한다.</li>\n<li>전달한 아날로그 신호를 받아서 수신측에서 디코더를 통해 원본데이터로 변환한다.</li>\n</ul>\n<p>간단한 함수로 살펴보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> encoder <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token operator\">:</span> OriginData<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> AnalogSignal  <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token operator\">...</span>\n\t<span class=\"token keyword\">return</span> analogSignal\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> decoder <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>analogSignal<span class=\"token operator\">:</span> AnalogSignal<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> OriginData  <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token operator\">...</span>\n\t<span class=\"token keyword\">return</span> originData\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>물리계층은 하드웨어적으로 PHY칩에 구현이 되어있다.</p>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/bcaa030a-78fe-4bea-8a1a-458f71081b26/image.png\"></p>\n<hr>\n<h2>신호에 발생하는 문제</h2>\n<ul>\n<li>감쇠, 노이즈, 충돌</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/63869434-a7fc-4f5c-bafc-0ea82357ec83/image.png\"></p>\n<ul>\n<li>감쇠 : 긴 케이블을 지나는 동안 신호가 약해진다.</li>\n</ul>\n<p>→ 해결법: 증폭 처리를 해주는 기계를 중간에 설치함.</p>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/02d6a47a-b4e6-48b9-adf9-19cff13d0f31/image.png\"></p>\n<ul>\n<li>노이즈 : 외부 요인(고온 물체, 또다른 신호를 보내는 케이블, 번개) 에 의해 신호의 형태가 무너진다.</li>\n</ul>\n<p>→ 해결법: 노이즈 원인으로부터 케이블을 멀리 두거나 케이블에 특수 가공을 해서 신호가 무너지지 않게 막는다.</p>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/c73ae80c-c831-44ba-9dc5-8a7230f5b27a/image.png\"></p>\n<ul>\n<li>충돌 : 멀티액세스 네트워크에서 일어날 수 있는 현상, 신호가 보내지고 있는 도중에 다른 신호를 보내는 경우 발생</li>\n<li>멀티액세스 네트워크: 케이블 한 개에 여러대의 컴퓨터를 연결한 구조</li>\n</ul>\n<p>→ 해결법: CSMA/CD 라는 액세스 제어를 시행해 신호를 보내는 타이밍을 겹치지 않게 함.</p>\n<hr>\n<h2>리피터</h2>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/18383ee2-e1fe-41f4-b086-d3692263d056/image.png\">\n<img src=\"https://media.vlpt.us/images/nsunny0908/post/4aa0d234-f2ce-4a25-bc91-75659d5d2eed/image.png\"></p>\n<ul>\n<li>약해진 신호를 증폭시켜 전달한다.</li>\n<li>오로지 증폭의 기능만 한다.</li>\n</ul>\n<h2>허브</h2>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/315985ac-e16e-46d9-8896-402b5f5fa8bf/image.png\"></p>\n<ul>\n<li>다중 포트 리피터</li>\n<li>쉽게 말해 리피터의 역할을 하는데 포트가 여러개.</li>\n</ul>\n<p><strong>기능</strong></p>\n<ol>\n<li>약해진 신호를 증폭시켜 전달한다.</li>\n<li>여러개의 기기를 연결해 네트워크를 구축한다.</li>\n</ol>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/8d533456-6c46-4de0-b1f9-815084744c4f/image.png\"></p>\n<p>하나의 케이블 사용</p>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/41244c30-6d17-488b-9bca-8ea35d74a92f/image.png\"></p>\n<p>허브 사용</p>\n<ul>\n<li>허브와 허브를 연결할 수도 있다. → 큰 네트워크 형성 가능</li>\n</ul>\n<h3>플러딩 (넘쳐흐르다)</h3>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/11ec8e4a-4bce-4086-b958-9f3bf49c7df5/image.png\"></p>\n<ul>\n<li>허브는 한 컴퓨터에서 전송된 데이터를 모든 컴퓨터에게 다 전송한다. 이를 플러딩이라고 한다.</li>\n<li>2계층에서 사용하는 스위치, 브릿지 등은 MAC주소(데이터 링크 계층에서 통신을 위한 네트워크 인터페이스에 할당된 고유 식별자)라는 걸 알기때문에 4번에서 1번으로 보내고 싶으면 특정 컴퓨터로만 전송이 가능하다.\n그러나 1계층에서만 사용하는 허브는 MAC주소를 알지 못하기 때문에 4번에서 전송하면 1,2,3번한테 모두 전송되는 것이다.</li>\n</ul>\n<p><img src=\"https://media.vlpt.us/images/nsunny0908/post/1f3f5ce4-50e4-4ba5-a891-163e259d24b9/image.png\"></p>\n<h3>충돌 도메인 (collision Domain)</h3>\n<ul>\n<li>허브로 연결되어 있는 컴퓨터는 같은 충돌 도메인에 있게 된다.</li>\n<li>충돌 도메인은 작아야만 하며, 충돌 도메인이 작으려면 연결된 컴퓨터의 수가 적어야 한다.</li>\n<li>그러나 반드시 다수의 컴퓨터가 필요한 경우에는 스위치를 사용한다.</li>\n</ul>\n<h2>📝 정리</h2>\n<ol>\n<li>물리계층은 통신매체를 통해 신호를 전달하는 역할을 한다.</li>\n<li>신호를 전달할 때 감쇠, 노이즈, 충돌 등의 문제가 있을 수 있다.</li>\n<li>물리계층에선 신호를 증폭시키는 역할을 하는 리피터, 증폭시키고 여러개의 기기를 연결할 수 있는 허브를 사용한다.</li>\n</ol>","frontmatter":{"title":"OSI 7계층 중 1계층에 대해서 알아보자","date":"April 01, 2022"},"fields":{"slug":"/contents/posts/2022-04-01/","readingTime":{"minutes":8.21}}},"seriesList":{"edges":[{"node":{"id":"5267d72c-500b-59e9-9927-51ccdcf24b4a","fields":{"slug":"/contents/posts/2020-12-24/"},"frontmatter":{"title":"사진학도가 개발자가 된 이유"}}},{"node":{"id":"7a575c97-2286-5eb3-9a4e-df5412bfb335","fields":{"slug":"/contents/posts/2021-05-10/"},"frontmatter":{"title":"Intersection Observer API를 활용한 무한스크롤"}}},{"node":{"id":"0f295bb2-6a3c-511b-99d3-3d903307287d","fields":{"slug":"/contents/posts/2021-05-17/"},"frontmatter":{"title":"기술을 할 것인가, 예술을 할 것인가"}}},{"node":{"id":"9f0c0170-6efd-5ba0-b3b2-7130bedea7a0","fields":{"slug":"/contents/posts/2021-06-13/"},"frontmatter":{"title":"코딩 부트캠프와 좋은 개발자"}}},{"node":{"id":"3809cc24-7495-5555-925d-dc49258ffc52","fields":{"slug":"/contents/posts/2021-07-04/"},"frontmatter":{"title":"Prototype"}}},{"node":{"id":"ca0cb7cb-a3fe-525d-a38c-6cbd1852bd1d","fields":{"slug":"/contents/posts/2021-08-11/"},"frontmatter":{"title":"null 병합 연산자(nullish coalescing operator)"}}},{"node":{"id":"5e2b28f0-928d-5111-af17-8be7fbe9ec39","fields":{"slug":"/contents/posts/2021-08-12/"},"frontmatter":{"title":"\"함수 컴포넌트\"와 \"함수형 컴포넌트\"가 같은 말이라고 생각하시나요?"}}},{"node":{"id":"80af794d-6d8b-57a1-a2d1-64b3e3b98fa7","fields":{"slug":"/contents/posts/2021-08-16/"},"frontmatter":{"title":"React Context Api"}}},{"node":{"id":"6ce9e47c-23b4-5026-bed6-116351eb8aee","fields":{"slug":"/contents/posts/2021-08-21/"},"frontmatter":{"title":"React Portal"}}},{"node":{"id":"88cdf508-0abb-5014-8d70-e65d35c6d884","fields":{"slug":"/contents/posts/2021-08-22/"},"frontmatter":{"title":"제어 컴포넌트와 비제어 컴포넌트"}}},{"node":{"id":"0d93f1f5-2ccc-54b6-b943-7179687ac266","fields":{"slug":"/contents/posts/2021-08-30/"},"frontmatter":{"title":"TDZ (Temporal Dead Zone)"}}},{"node":{"id":"457d0b1b-3d90-5eea-a66f-8587373ab7c6","fields":{"slug":"/contents/posts/2021-09-04/"},"frontmatter":{"title":"VAC 패턴"}}},{"node":{"id":"b0b1c6d8-47d0-5edf-9261-25d3a5a75ad2","fields":{"slug":"/contents/posts/2021-09-09/"},"frontmatter":{"title":"Typescript Alias 설정시 마주친 오류"}}},{"node":{"id":"c2550142-36f4-5398-a554-702b8fa1b6b8","fields":{"slug":"/contents/posts/2021-10-05/"},"frontmatter":{"title":"patch-package로 외부 라이브러리 수정해서 사용하기"}}},{"node":{"id":"36da5bac-6acc-5daa-b307-4a9fdc74542f","fields":{"slug":"/contents/posts/2021-11-25/"},"frontmatter":{"title":"Custom hook vs Function"}}},{"node":{"id":"2a55cc9e-c79c-5a4d-ac53-a0d36cc69597","fields":{"slug":"/contents/posts/2021-12-19/"},"frontmatter":{"title":"NPM"}}},{"node":{"id":"6d5384bb-c04f-5cc7-945c-5aea5380bb94","fields":{"slug":"/contents/posts/2021-12-31/"},"frontmatter":{"title":"2021년 회고"}}},{"node":{"id":"745a2241-d9b5-5ce0-b6fd-f2a66699554d","fields":{"slug":"/contents/posts/2022-01-05/"},"frontmatter":{"title":":focus-within"}}},{"node":{"id":"b794f451-f15c-5011-8dba-34a5b533b144","fields":{"slug":"/contents/posts/2022-02-28/"},"frontmatter":{"title":"div에서 placeholder 사용하기 (styled-component)"}}},{"node":{"id":"7c078298-d430-54a2-a954-63a6687c7328","fields":{"slug":"/contents/posts/2022-03-13/"},"frontmatter":{"title":"Tooltip component 트러블 슈팅"}}},{"node":{"id":"f1e4e298-5cae-5a57-8798-17ababf157e0","fields":{"slug":"/contents/posts/2022-04-01/"},"frontmatter":{"title":"OSI 7계층 중 1계층에 대해서 알아보자"}}},{"node":{"id":"279cb68d-a1a3-5ee4-b743-784d2bf365c5","fields":{"slug":"/contents/posts/2022-05-22/"},"frontmatter":{"title":"프론트앤드에서의 테스트 (나에겐 너무나 멀고 힘든 테스트코드 짜기..)"}}},{"node":{"id":"83ff9034-42a0-5267-bc2b-d710f2446cff","fields":{"slug":"/contents/posts/2022-06-05/"},"frontmatter":{"title":"debounce 트러블 슈팅"}}},{"node":{"id":"796731f6-1035-5bb8-ac76-467aae3fa171","fields":{"slug":"/contents/posts/2022-06-11/"},"frontmatter":{"title":"Object Delete"}}},{"node":{"id":"bbb421e5-8831-5038-a552-96243600d346","fields":{"slug":"/contents/posts/2022-06-25/"},"frontmatter":{"title":"Modal esc 관련 트러블 슈팅"}}},{"node":{"id":"df7ea411-5375-56e2-8ce9-4f86bb631af7","fields":{"slug":"/contents/posts/2022-07-20/"},"frontmatter":{"title":"OSI 7계층 중 2계층에 대해서 알아보자"}}},{"node":{"id":"bd139eae-9fe0-53cd-9205-95f18d33e90d","fields":{"slug":"/contents/posts/2022-08-17/"},"frontmatter":{"title":"페이지네이션 검색 관련 트러블슈팅"}}},{"node":{"id":"a8bfc1a9-ef8f-554f-8caf-5c17a027f52a","fields":{"slug":"/contents/posts/2022-09-10/"},"frontmatter":{"title":"이제 deep copy할 때 structuredClone을 씁시다."}}},{"node":{"id":"0cabe0ee-d57f-5cc9-8402-1a960f86eed7","fields":{"slug":"/contents/posts/2022-09-12/"},"frontmatter":{"title":"javascript class와 private 속성"}}},{"node":{"id":"3a533e42-a168-5aad-bb6b-0bee817a94cd","fields":{"slug":"/contents/posts/2022-09-24/"},"frontmatter":{"title":"TypeScript의 Soundness와 Type Assertion (as 떡칠하지 말자..)"}}},{"node":{"id":"9f1a0f31-42b4-5c43-8baa-c5973a1a5281","fields":{"slug":"/contents/posts/2022-09-28/"},"frontmatter":{"title":"어쩐지 yarn으로 패키지 설치할 때 오류가 났다.."}}},{"node":{"id":"74180524-c983-5af9-810b-e70418f145a5","fields":{"slug":"/contents/posts/2022-10-06/"},"frontmatter":{"title":"storybook addon 안보일때"}}},{"node":{"id":"a9317839-66e0-5734-a125-5266ac700f9f","fields":{"slug":"/contents/posts/2022-12-31/"},"frontmatter":{"title":"2022년 회고"}}},{"node":{"id":"e0593ebb-38b6-5d5b-bd37-63a6740ea2e8","fields":{"slug":"/contents/posts/2023-07-05/"},"frontmatter":{"title":"get image api 오류 트러블 슈팅"}}},{"node":{"id":"a5ffa0e0-ac0f-592c-a606-ef5545b8d5f5","fields":{"slug":"/contents/posts/2023-08-05/"},"frontmatter":{"title":"The Progressive JavaScript Framework"}}},{"node":{"id":"dba241d0-3594-5a1d-a854-be8184071124","fields":{"slug":"/contents/posts/2023-08-13/"},"frontmatter":{"title":"why can’t use window in vue template?"}}},{"node":{"id":"3bfdd15b-b1ae-57eb-98d8-ac40ffe55a63","fields":{"slug":"/contents/posts/2023-08-25/"},"frontmatter":{"title":"처음 남의 코드를 받으면 뭘 해야할까?"}}},{"node":{"id":"f399c871-2d22-5b62-ae86-75e0aa456d6d","fields":{"slug":"/contents/posts/2023-08-27/"},"frontmatter":{"title":"동물의 숲 짤 생성기를 만들었다"}}},{"node":{"id":"a78e398b-f8c7-56c1-a2c0-deedd720557b","fields":{"slug":"/contents/posts/2023-09-17/"},"frontmatter":{"title":"신뢰할 수 없는 코드를 쓰면서 불변성 지키기"}}},{"node":{"id":"a5b16fda-7eb6-5089-a91c-9231b9dd28d0","fields":{"slug":"/contents/posts/2023-10-01/"},"frontmatter":{"title":"mac에 rocky linux 설치하기"}}}]},"previous":{"fields":{"slug":"/contents/posts/2022-03-13/"},"frontmatter":{"title":"Tooltip component 트러블 슈팅"}},"next":{"fields":{"slug":"/contents/posts/2022-05-22/"},"frontmatter":{"title":"프론트앤드에서의 테스트 (나에겐 너무나 멀고 힘든 테스트코드 짜기..)"}}},"pageContext":{"id":"f1e4e298-5cae-5a57-8798-17ababf157e0","series":null,"previousPostId":"7c078298-d430-54a2-a954-63a6687c7328","nextPostId":"279cb68d-a1a3-5ee4-b743-784d2bf365c5"}},"staticQueryHashes":[],"slicesMap":{}}