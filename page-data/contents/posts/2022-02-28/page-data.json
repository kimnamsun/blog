{"componentChunkName":"component---src-templates-post-jsx","path":"/contents/posts/2022-02-28/","result":{"data":{"site":{"siteMetadata":{"title":"kimnamsun"}},"markdownRemark":{"id":"b794f451-f15c-5011-8dba-34a5b533b144","excerpt":"요구조건 select에 placeholder를 적용해주세요.  문제점 select가 input 태그로 구현되어있었다면 placeholder속성만 넣으면 간단히 해결 됐겠지만, select는 구현체가 였다. div에 placeholder를 어떻게 적용할 수 있을까? div에 placeholder 적용하기 우선 div로 구현되어있는 컴포넌트에 placehol…","html":"<h1>요구조건</h1>\n<blockquote>\n<p>select에 placeholder를 적용해주세요.</p>\n</blockquote>\n<p><img src=\"https://images.velog.io/images/nsunny0908/post/2c2da547-a6a9-4265-9b3c-1672b2c0f61a/image.png\"></p>\n<h1>문제점</h1>\n<p>select가 input 태그로 구현되어있었다면 placeholder속성만 넣으면 간단히 해결 됐겠지만, select는 구현체가 <code class=\"language-text\">div</code>였다.</p>\n<p>div에 placeholder를 어떻게 적용할 수 있을까?</p>\n<h1>div에 placeholder 적용하기</h1>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Select</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>placeholder<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<ul>\n<li>우선 div로 구현되어있는 컴포넌트에 placeholder 속성을 넣어준다. (속성 이름은 꼭 placeholder가 아니어도 된다.)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Select</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>placeholder<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">hasValue</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span>value<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<ul>\n<li>placeholder는 select에 값이 선택되면 사라져야하므로, <code class=\"language-text\">hasValue</code> 란 prop을 넘겨준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\">$<span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> hasValue<span class=\"token punctuation\">,</span> placeholder <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    <span class=\"token operator\">!</span>hasValue <span class=\"token operator\">&amp;&amp;</span>\n    placeholder <span class=\"token operator\">&amp;&amp;</span>\n    css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n      &amp;:before {\n        content: attr(placeholder);\n        color: gray;\n      }\n    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>hasValue가 없으면서 placeholder가 있을때만 보여야하므로 styled-component 내에서 분기처리를 한다.</li>\n<li>가상요소 <code class=\"language-text\">before</code>와 속성을 가져오는 함수인 <code class=\"language-text\">attr</code>을 이용해 placeholder를 적용한다.</li>\n</ul>\n<p><img src=\"https://images.velog.io/images/nsunny0908/post/04e64252-1da5-4b07-9ffb-87d60e762276/image.png\"></p>\n<p><img src=\"https://images.velog.io/images/nsunny0908/post/c5bf4953-4bf7-4ad5-b1b9-b4ff1ea477db/image.png\"></p>\n<ul>\n<li>하지만 select의 영역을 다 차지하는 것이 아니라 일부만 차지하고 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\">$<span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> hasValue<span class=\"token punctuation\">,</span> placeholder <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    <span class=\"token operator\">!</span>hasValue <span class=\"token operator\">&amp;&amp;</span>\n    placeholder <span class=\"token operator\">&amp;&amp;</span>\n    css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n      &amp;:before {\n        content: attr(placeholder);\n        color: gray;\n        white-space: nowrap;\n        width: 100%;\n      }\n    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>해결을 위해 width에 100%값을 주고, white-space: nowrap; 속성을 추가한다.</li>\n</ul>\n<p><img src=\"https://images.velog.io/images/nsunny0908/post/f5c9f42d-3241-4cb4-bb6c-c302fda6200f/image.png\"></p>\n<h1>::before</h1>\n<h3>::before</h3>\n<blockquote>\n<p>::before는 선택한 요소의 첫 자식으로 요소를 생성한다.</p>\n</blockquote>\n<p>예를 들어서 설명하자면, 다음과 같은 span태그가 있다고 하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>텍스트<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.text::before</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"♥\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>span 앞에 하트를 추가하면 다음과 같이 보여지게 된다.</p>\n<p><img src=\"https://images.velog.io/images/nsunny0908/post/9c582fcd-e8b3-4cb0-b279-a984129d269f/image.png\"></p>\n<h1>attr()</h1>\n<blockquote>\n<p><code class=\"language-text\">attr()</code>는 요소의 속성 값을 문자열로 반환하는 함수이다.</p>\n</blockquote>\n<p>요소에 속성 값이 없으면 빈 문자열이 반환된다.</p>\n<p>위의 예제에서 placeholder란 속성을 추가하고 내용을 입력해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>placeholder<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>텍스트<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.text::before</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>placeholder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://images.velog.io/images/nsunny0908/post/2513a172-3a8f-4710-a743-0eaa251d4801/image.png\"></p>\n<p>placeholder의 내용을 가져올 수 있다.</p>","frontmatter":{"title":"div에서 placeholder 사용하기 (styled-component)","date":"February 28, 2022"},"fields":{"slug":"/contents/posts/2022-02-28/","readingTime":{"minutes":2.445}}},"seriesList":{"edges":[{"node":{"id":"5267d72c-500b-59e9-9927-51ccdcf24b4a","fields":{"slug":"/contents/posts/2020-12-24/"},"frontmatter":{"title":"사진학도가 개발자가 된 이유"}}},{"node":{"id":"7a575c97-2286-5eb3-9a4e-df5412bfb335","fields":{"slug":"/contents/posts/2021-05-10/"},"frontmatter":{"title":"Intersection Observer API를 활용한 무한스크롤"}}},{"node":{"id":"0f295bb2-6a3c-511b-99d3-3d903307287d","fields":{"slug":"/contents/posts/2021-05-17/"},"frontmatter":{"title":"기술을 할 것인가, 예술을 할 것인가"}}},{"node":{"id":"9f0c0170-6efd-5ba0-b3b2-7130bedea7a0","fields":{"slug":"/contents/posts/2021-06-13/"},"frontmatter":{"title":"코딩 부트캠프와 좋은 개발자"}}},{"node":{"id":"3809cc24-7495-5555-925d-dc49258ffc52","fields":{"slug":"/contents/posts/2021-07-04/"},"frontmatter":{"title":"Prototype"}}},{"node":{"id":"ca0cb7cb-a3fe-525d-a38c-6cbd1852bd1d","fields":{"slug":"/contents/posts/2021-08-11/"},"frontmatter":{"title":"null 병합 연산자(nullish coalescing operator)"}}},{"node":{"id":"5e2b28f0-928d-5111-af17-8be7fbe9ec39","fields":{"slug":"/contents/posts/2021-08-12/"},"frontmatter":{"title":"\"함수 컴포넌트\"와 \"함수형 컴포넌트\"가 같은 말이라고 생각하시나요?"}}},{"node":{"id":"80af794d-6d8b-57a1-a2d1-64b3e3b98fa7","fields":{"slug":"/contents/posts/2021-08-16/"},"frontmatter":{"title":"React Context Api"}}},{"node":{"id":"6ce9e47c-23b4-5026-bed6-116351eb8aee","fields":{"slug":"/contents/posts/2021-08-21/"},"frontmatter":{"title":"React Portal"}}},{"node":{"id":"88cdf508-0abb-5014-8d70-e65d35c6d884","fields":{"slug":"/contents/posts/2021-08-22/"},"frontmatter":{"title":"제어 컴포넌트와 비제어 컴포넌트"}}},{"node":{"id":"0d93f1f5-2ccc-54b6-b943-7179687ac266","fields":{"slug":"/contents/posts/2021-08-30/"},"frontmatter":{"title":"TDZ (Temporal Dead Zone)"}}},{"node":{"id":"457d0b1b-3d90-5eea-a66f-8587373ab7c6","fields":{"slug":"/contents/posts/2021-09-04/"},"frontmatter":{"title":"VAC 패턴"}}},{"node":{"id":"b0b1c6d8-47d0-5edf-9261-25d3a5a75ad2","fields":{"slug":"/contents/posts/2021-09-09/"},"frontmatter":{"title":"Typescript Alias 설정시 마주친 오류"}}},{"node":{"id":"c2550142-36f4-5398-a554-702b8fa1b6b8","fields":{"slug":"/contents/posts/2021-10-05/"},"frontmatter":{"title":"patch-package로 외부 라이브러리 수정해서 사용하기"}}},{"node":{"id":"36da5bac-6acc-5daa-b307-4a9fdc74542f","fields":{"slug":"/contents/posts/2021-11-25/"},"frontmatter":{"title":"Custom hook vs Function"}}},{"node":{"id":"2a55cc9e-c79c-5a4d-ac53-a0d36cc69597","fields":{"slug":"/contents/posts/2021-12-19/"},"frontmatter":{"title":"NPM"}}},{"node":{"id":"6d5384bb-c04f-5cc7-945c-5aea5380bb94","fields":{"slug":"/contents/posts/2021-12-31/"},"frontmatter":{"title":"2021년 회고"}}},{"node":{"id":"745a2241-d9b5-5ce0-b6fd-f2a66699554d","fields":{"slug":"/contents/posts/2022-01-05/"},"frontmatter":{"title":":focus-within"}}},{"node":{"id":"b794f451-f15c-5011-8dba-34a5b533b144","fields":{"slug":"/contents/posts/2022-02-28/"},"frontmatter":{"title":"div에서 placeholder 사용하기 (styled-component)"}}},{"node":{"id":"7c078298-d430-54a2-a954-63a6687c7328","fields":{"slug":"/contents/posts/2022-03-13/"},"frontmatter":{"title":"Tooltip component 트러블 슈팅"}}},{"node":{"id":"f1e4e298-5cae-5a57-8798-17ababf157e0","fields":{"slug":"/contents/posts/2022-04-01/"},"frontmatter":{"title":"OSI 7계층 중 1계층에 대해서 알아보자"}}},{"node":{"id":"279cb68d-a1a3-5ee4-b743-784d2bf365c5","fields":{"slug":"/contents/posts/2022-05-22/"},"frontmatter":{"title":"프론트앤드에서의 테스트 (나에겐 너무나 멀고 힘든 테스트코드 짜기..)"}}},{"node":{"id":"83ff9034-42a0-5267-bc2b-d710f2446cff","fields":{"slug":"/contents/posts/2022-06-05/"},"frontmatter":{"title":"debounce 트러블 슈팅"}}},{"node":{"id":"796731f6-1035-5bb8-ac76-467aae3fa171","fields":{"slug":"/contents/posts/2022-06-11/"},"frontmatter":{"title":"Object Delete"}}},{"node":{"id":"bbb421e5-8831-5038-a552-96243600d346","fields":{"slug":"/contents/posts/2022-06-25/"},"frontmatter":{"title":"Modal esc 관련 트러블 슈팅"}}},{"node":{"id":"df7ea411-5375-56e2-8ce9-4f86bb631af7","fields":{"slug":"/contents/posts/2022-07-20/"},"frontmatter":{"title":"OSI 7계층 중 2계층에 대해서 알아보자"}}},{"node":{"id":"bd139eae-9fe0-53cd-9205-95f18d33e90d","fields":{"slug":"/contents/posts/2022-08-17/"},"frontmatter":{"title":"페이지네이션 검색 관련 트러블슈팅"}}},{"node":{"id":"a8bfc1a9-ef8f-554f-8caf-5c17a027f52a","fields":{"slug":"/contents/posts/2022-09-10/"},"frontmatter":{"title":"이제 deep copy할 때 structuredClone을 씁시다."}}},{"node":{"id":"0cabe0ee-d57f-5cc9-8402-1a960f86eed7","fields":{"slug":"/contents/posts/2022-09-12/"},"frontmatter":{"title":"javascript class와 private 속성"}}},{"node":{"id":"3a533e42-a168-5aad-bb6b-0bee817a94cd","fields":{"slug":"/contents/posts/2022-09-24/"},"frontmatter":{"title":"TypeScript의 Soundness와 Type Assertion (as 떡칠하지 말자..)"}}},{"node":{"id":"9f1a0f31-42b4-5c43-8baa-c5973a1a5281","fields":{"slug":"/contents/posts/2022-09-28/"},"frontmatter":{"title":"어쩐지 yarn으로 패키지 설치할 때 오류가 났다.."}}},{"node":{"id":"74180524-c983-5af9-810b-e70418f145a5","fields":{"slug":"/contents/posts/2022-10-06/"},"frontmatter":{"title":"storybook addon 안보일때"}}},{"node":{"id":"a9317839-66e0-5734-a125-5266ac700f9f","fields":{"slug":"/contents/posts/2022-12-31/"},"frontmatter":{"title":"2022년 회고"}}},{"node":{"id":"e0593ebb-38b6-5d5b-bd37-63a6740ea2e8","fields":{"slug":"/contents/posts/2023-07-05/"},"frontmatter":{"title":"get image api 오류 트러블 슈팅"}}},{"node":{"id":"a5ffa0e0-ac0f-592c-a606-ef5545b8d5f5","fields":{"slug":"/contents/posts/2023-08-05/"},"frontmatter":{"title":"The Progressive JavaScript Framework"}}},{"node":{"id":"dba241d0-3594-5a1d-a854-be8184071124","fields":{"slug":"/contents/posts/2023-08-13/"},"frontmatter":{"title":"why can’t use window in vue template?"}}},{"node":{"id":"3bfdd15b-b1ae-57eb-98d8-ac40ffe55a63","fields":{"slug":"/contents/posts/2023-08-25/"},"frontmatter":{"title":"처음 남의 코드를 받으면 뭘 해야할까?"}}},{"node":{"id":"f399c871-2d22-5b62-ae86-75e0aa456d6d","fields":{"slug":"/contents/posts/2023-08-27/"},"frontmatter":{"title":"동물의 숲 짤 생성기를 만들었다"}}},{"node":{"id":"a78e398b-f8c7-56c1-a2c0-deedd720557b","fields":{"slug":"/contents/posts/2023-09-17/"},"frontmatter":{"title":"신뢰할 수 없는 코드를 쓰면서 불변성 지키기"}}},{"node":{"id":"a5b16fda-7eb6-5089-a91c-9231b9dd28d0","fields":{"slug":"/contents/posts/2023-10-01/"},"frontmatter":{"title":"mac에 rocky linux 설치하기"}}}]},"previous":{"fields":{"slug":"/contents/posts/2022-01-05/"},"frontmatter":{"title":":focus-within"}},"next":{"fields":{"slug":"/contents/posts/2022-03-13/"},"frontmatter":{"title":"Tooltip component 트러블 슈팅"}}},"pageContext":{"id":"b794f451-f15c-5011-8dba-34a5b533b144","series":null,"previousPostId":"745a2241-d9b5-5ce0-b6fd-f2a66699554d","nextPostId":"7c078298-d430-54a2-a954-63a6687c7328"}},"staticQueryHashes":[],"slicesMap":{}}