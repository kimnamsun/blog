{"componentChunkName":"component---src-templates-post-jsx","path":"/contents/posts/2023-08-05/","result":{"data":{"site":{"siteMetadata":{"title":"kimnamsun"}},"markdownRemark":{"id":"a5ffa0e0-ac0f-592c-a606-ef5545b8d5f5","excerpt":"문제상황 이것은 vuejs 공식페이지에 들어가자마자 보이는 문구이다. 그렇다.. vue를 하게 되었다.. (3로 마이그레이션 언제하지..) 자세한 기능이나 이런것들은 따로 작성하지 않을 것이다. 공식문서가 훨씬 잘나와있음. 내가 코드분석하면서 이해한 것 위주로 작성된 것임. (내가 보려고 작성했단 뜻) main.js 진입점 new Vue : Vue 인스턴…","html":"<h2>문제상황</h2>\n<blockquote>\n<p>이것은 vuejs 공식페이지에 들어가자마자 보이는 문구이다.<br>\n그렇다.. vue를 하게 되었다.. (<del>3로 마이그레이션 언제하지..</del>)<br>\n자세한 기능이나 이런것들은 따로 작성하지 않을 것이다. 공식문서가 훨씬 잘나와있음.<br>\n내가 코드분석하면서 이해한 것 위주로 작성된 것임. (내가 보려고 작성했단 뜻)</p>\n</blockquote>\n<h2>main.js</h2>\n<ul>\n<li>진입점</li>\n<li>new Vue : Vue 인스턴스 생성</li>\n<li><code class=\"language-text\">el: \"#app\"</code>: Vue 인스턴스가 마운트될 HTML 요소를 지정.<br>\n\"#app\"은 HTML 문서 내에서 id가 \"app\"인 요소를 찾아 사용.</li>\n<li><code class=\"language-text\">router</code>: Vue Router 인스턴스를 사용하여 라우팅 기능을 추가</li>\n<li><code class=\"language-text\">render: (h) => h(App)</code>: 애플리케이션의 루트 컴포넌트인 <code class=\"language-text\">App</code> 컴포넌트를 렌더링.<br>\n<code class=\"language-text\">(h) => h(App)</code>는 렌더링 함수를 나타내며, <strong><code class=\"language-text\">h</code></strong>는 createElement 함수를 의미한다.</li>\n</ul>\n<h2>App.vue</h2>\n<p>컴포넌트에서 <code class=\"language-text\">data() {}</code> 형태로 쓰는 이유<br>\n-> 컴포넌트를 여러개 썼을때 데이터가 공유되는 현상을 막기 위해 항상 새로운 객체를 생성해 return 하는 메서드를 지정해줌</p>\n<ul>\n<li><code class=\"language-text\">[created()](https://ko.vuejs.org/api/options-lifecycle.html#created)</code>: 컴포넌트가 생성되었을 때 실행되는 라이프사이클 훅.</li>\n<li><code class=\"language-text\">[mounted()](https://ko.vuejs.org/api/options-lifecycle.html#mounted)</code>: 컴포넌트가 마운트된 후에 실행되는 라이프사이클 훅.</li>\n<li>참고: <a href=\"https://ko.vuejs.org/api/options-lifecycle.html\">https://ko.vuejs.org/api/options-lifecycle.html</a></li>\n<li>\n<p><code class=\"language-text\">@*close*=\"eventName\"</code></p>\n<ul>\n<li>사용자가 직접 정의한 커스텀 이벤트</li>\n<li>커스텀 이벤트를 사용하여 부모 컴포넌트와 통신하고 상호작용할 수 있다.</li>\n<li><code class=\"language-text\">@close</code> 이벤트는 부모 컴포넌트에서 발생, 해당 컴포넌트 내부에서 닫기 동작이 수행될 때 이벤트를 발생시킨다.<br>\n이 이벤트는 부모 컴포넌트에서 <code class=\"language-text\">@close</code> 속성을 사용하여 해당 이벤트에 대한 핸들러를 등록할 수 있다.</li>\n<li>부모 내부에서 <code class=\"language-text\">@click=\"$emit('close')\"</code> 이런식으로 이벤트를 발생시킨다.</li>\n</ul>\n</li>\n</ul>\n<h3>computed</h3>\n<ul>\n<li>템플릿 코드 대신 사용할 수 있다.</li>\n<li>data 속성이 변했을 때 이를 감지하고 자동으로 다시 연산해준다.</li>\n<li>인자를 받지 않는다.</li>\n<li>HTTP 통신과 같이 브라우저 리소스가 많이 필요한 코드들은 watch나 methods에 넣는 것이 적합하다.</li>\n</ul>\n<h3>watch</h3>\n<ul>\n<li>특정 데이터나 표현식의 변화를 감지하고, 그에 따라 특정 동작을 수행하는 역할</li>\n</ul>\n<h3>computed vs watch</h3>\n<ul>\n<li>watch 속성은 감시할 데이터를 지정하고 데이터가 바뀌면 함수를 실행하는 방식 → 명령형 프로그래밍</li>\n<li>computed 속성은 계산해야하는 목표 데이터를 정의하는 방식 → 선언형 프로그래밍</li>\n</ul>\n<h3>$emit</h3>\n<ul>\n<li>컴포넌트 내에서 커스텀 이벤트를 발생시킬 수 있다.</li>\n<li><code class=\"language-text\">$emit('close')</code>는 <code class=\"language-text\">close</code>라는 이름의 커스텀 이벤트를 발생시키는 것을 의미한다.</li>\n</ul>\n<h3>slot</h3>\n<ul>\n<li>부모가 되는 컴포넌트에서 자식 컴포넌트의 템플릿의 일부를 삽입하는 기능</li>\n<li>부모 component</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"vue\"><pre class=\"language-vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div class=&quot;home&quot;&gt;\n    &lt;MyCom&gt;&lt;/MyCom&gt;\n    &lt;MyCom&gt;\n      &lt;template v-slot:name&gt;aila&lt;/template&gt;\n    &lt;/MyCom&gt;\n    &lt;MyCom&gt;\n      &lt;template v-slot:age&gt;999&lt;/template&gt;\n    &lt;/MyCom&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport MyCom from &quot;@/components/MyCom.vue&quot;\nexport default {\n  components: {\n    MyCom,\n  },\n}\n&lt;/script&gt;</code></pre></div>\n<p>v-bind - <code class=\"language-text\">:</code></p>\n<p>v-on - <code class=\"language-text\">@</code></p>\n<p>v-slot - <code class=\"language-text\">#</code></p>\n<p>으로 축약가능</p>\n<ul>\n<li>자식 component</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"vue\"><pre class=\"language-vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div class=&quot;mycom&quot;&gt;\n    &lt;p&gt;name:&lt;slot name=&quot;name&quot;&gt;namsun&lt;/slot&gt;&lt;/p&gt;\n    &lt;p&gt;address:&lt;slot name=&quot;age&quot;&gt;99&lt;/slot&gt;&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;</code></pre></div>","frontmatter":{"title":"The Progressive JavaScript Framework","date":"August 05, 2023"},"fields":{"slug":"/contents/posts/2023-08-05/","readingTime":{"minutes":4.195}}},"seriesList":{"edges":[{"node":{"id":"5267d72c-500b-59e9-9927-51ccdcf24b4a","fields":{"slug":"/contents/posts/2020-12-24/"},"frontmatter":{"title":"사진학도가 개발자가 된 이유"}}},{"node":{"id":"7a575c97-2286-5eb3-9a4e-df5412bfb335","fields":{"slug":"/contents/posts/2021-05-10/"},"frontmatter":{"title":"Intersection Observer API를 활용한 무한스크롤"}}},{"node":{"id":"0f295bb2-6a3c-511b-99d3-3d903307287d","fields":{"slug":"/contents/posts/2021-05-17/"},"frontmatter":{"title":"기술을 할 것인가, 예술을 할 것인가"}}},{"node":{"id":"9f0c0170-6efd-5ba0-b3b2-7130bedea7a0","fields":{"slug":"/contents/posts/2021-06-13/"},"frontmatter":{"title":"코딩 부트캠프와 좋은 개발자"}}},{"node":{"id":"3809cc24-7495-5555-925d-dc49258ffc52","fields":{"slug":"/contents/posts/2021-07-04/"},"frontmatter":{"title":"Prototype"}}},{"node":{"id":"ca0cb7cb-a3fe-525d-a38c-6cbd1852bd1d","fields":{"slug":"/contents/posts/2021-08-11/"},"frontmatter":{"title":"null 병합 연산자(nullish coalescing operator)"}}},{"node":{"id":"5e2b28f0-928d-5111-af17-8be7fbe9ec39","fields":{"slug":"/contents/posts/2021-08-12/"},"frontmatter":{"title":"\"함수 컴포넌트\"와 \"함수형 컴포넌트\"가 같은 말이라고 생각하시나요?"}}},{"node":{"id":"80af794d-6d8b-57a1-a2d1-64b3e3b98fa7","fields":{"slug":"/contents/posts/2021-08-16/"},"frontmatter":{"title":"React Context Api"}}},{"node":{"id":"6ce9e47c-23b4-5026-bed6-116351eb8aee","fields":{"slug":"/contents/posts/2021-08-21/"},"frontmatter":{"title":"React Portal"}}},{"node":{"id":"88cdf508-0abb-5014-8d70-e65d35c6d884","fields":{"slug":"/contents/posts/2021-08-22/"},"frontmatter":{"title":"제어 컴포넌트와 비제어 컴포넌트"}}},{"node":{"id":"0d93f1f5-2ccc-54b6-b943-7179687ac266","fields":{"slug":"/contents/posts/2021-08-30/"},"frontmatter":{"title":"TDZ (Temporal Dead Zone)"}}},{"node":{"id":"457d0b1b-3d90-5eea-a66f-8587373ab7c6","fields":{"slug":"/contents/posts/2021-09-04/"},"frontmatter":{"title":"VAC 패턴"}}},{"node":{"id":"b0b1c6d8-47d0-5edf-9261-25d3a5a75ad2","fields":{"slug":"/contents/posts/2021-09-09/"},"frontmatter":{"title":"Typescript Alias 설정시 마주친 오류"}}},{"node":{"id":"c2550142-36f4-5398-a554-702b8fa1b6b8","fields":{"slug":"/contents/posts/2021-10-05/"},"frontmatter":{"title":"patch-package로 외부 라이브러리 수정해서 사용하기"}}},{"node":{"id":"36da5bac-6acc-5daa-b307-4a9fdc74542f","fields":{"slug":"/contents/posts/2021-11-25/"},"frontmatter":{"title":"Custom hook vs Function"}}},{"node":{"id":"2a55cc9e-c79c-5a4d-ac53-a0d36cc69597","fields":{"slug":"/contents/posts/2021-12-19/"},"frontmatter":{"title":"NPM"}}},{"node":{"id":"6d5384bb-c04f-5cc7-945c-5aea5380bb94","fields":{"slug":"/contents/posts/2021-12-31/"},"frontmatter":{"title":"2021년 회고"}}},{"node":{"id":"745a2241-d9b5-5ce0-b6fd-f2a66699554d","fields":{"slug":"/contents/posts/2022-01-05/"},"frontmatter":{"title":":focus-within"}}},{"node":{"id":"b794f451-f15c-5011-8dba-34a5b533b144","fields":{"slug":"/contents/posts/2022-02-28/"},"frontmatter":{"title":"div에서 placeholder 사용하기 (styled-component)"}}},{"node":{"id":"7c078298-d430-54a2-a954-63a6687c7328","fields":{"slug":"/contents/posts/2022-03-13/"},"frontmatter":{"title":"Tooltip component 트러블 슈팅"}}},{"node":{"id":"f1e4e298-5cae-5a57-8798-17ababf157e0","fields":{"slug":"/contents/posts/2022-04-01/"},"frontmatter":{"title":"OSI 7계층 중 1계층에 대해서 알아보자"}}},{"node":{"id":"279cb68d-a1a3-5ee4-b743-784d2bf365c5","fields":{"slug":"/contents/posts/2022-05-22/"},"frontmatter":{"title":"프론트앤드에서의 테스트 (나에겐 너무나 멀고 힘든 테스트코드 짜기..)"}}},{"node":{"id":"83ff9034-42a0-5267-bc2b-d710f2446cff","fields":{"slug":"/contents/posts/2022-06-05/"},"frontmatter":{"title":"debounce 트러블 슈팅"}}},{"node":{"id":"796731f6-1035-5bb8-ac76-467aae3fa171","fields":{"slug":"/contents/posts/2022-06-11/"},"frontmatter":{"title":"Object Delete"}}},{"node":{"id":"bbb421e5-8831-5038-a552-96243600d346","fields":{"slug":"/contents/posts/2022-06-25/"},"frontmatter":{"title":"Modal esc 관련 트러블 슈팅"}}},{"node":{"id":"df7ea411-5375-56e2-8ce9-4f86bb631af7","fields":{"slug":"/contents/posts/2022-07-20/"},"frontmatter":{"title":"OSI 7계층 중 2계층에 대해서 알아보자"}}},{"node":{"id":"bd139eae-9fe0-53cd-9205-95f18d33e90d","fields":{"slug":"/contents/posts/2022-08-17/"},"frontmatter":{"title":"페이지네이션 검색 관련 트러블슈팅"}}},{"node":{"id":"a8bfc1a9-ef8f-554f-8caf-5c17a027f52a","fields":{"slug":"/contents/posts/2022-09-10/"},"frontmatter":{"title":"이제 deep copy할 때 structuredClone을 씁시다."}}},{"node":{"id":"0cabe0ee-d57f-5cc9-8402-1a960f86eed7","fields":{"slug":"/contents/posts/2022-09-12/"},"frontmatter":{"title":"javascript class와 private 속성"}}},{"node":{"id":"3a533e42-a168-5aad-bb6b-0bee817a94cd","fields":{"slug":"/contents/posts/2022-09-24/"},"frontmatter":{"title":"TypeScript의 Soundness와 Type Assertion (as 떡칠하지 말자..)"}}},{"node":{"id":"9f1a0f31-42b4-5c43-8baa-c5973a1a5281","fields":{"slug":"/contents/posts/2022-09-28/"},"frontmatter":{"title":"어쩐지 yarn으로 패키지 설치할 때 오류가 났다.."}}},{"node":{"id":"74180524-c983-5af9-810b-e70418f145a5","fields":{"slug":"/contents/posts/2022-10-06/"},"frontmatter":{"title":"storybook addon 안보일때"}}},{"node":{"id":"a9317839-66e0-5734-a125-5266ac700f9f","fields":{"slug":"/contents/posts/2022-12-31/"},"frontmatter":{"title":"2022년 회고"}}},{"node":{"id":"e0593ebb-38b6-5d5b-bd37-63a6740ea2e8","fields":{"slug":"/contents/posts/2023-07-05/"},"frontmatter":{"title":"get image api 오류 트러블 슈팅"}}},{"node":{"id":"a5ffa0e0-ac0f-592c-a606-ef5545b8d5f5","fields":{"slug":"/contents/posts/2023-08-05/"},"frontmatter":{"title":"The Progressive JavaScript Framework"}}},{"node":{"id":"dba241d0-3594-5a1d-a854-be8184071124","fields":{"slug":"/contents/posts/2023-08-13/"},"frontmatter":{"title":"why can’t use window in vue template?"}}},{"node":{"id":"3bfdd15b-b1ae-57eb-98d8-ac40ffe55a63","fields":{"slug":"/contents/posts/2023-08-25/"},"frontmatter":{"title":"처음 남의 코드를 받으면 뭘 해야할까?"}}},{"node":{"id":"f399c871-2d22-5b62-ae86-75e0aa456d6d","fields":{"slug":"/contents/posts/2023-08-27/"},"frontmatter":{"title":"동물의 숲 짤 생성기를 만들었다"}}},{"node":{"id":"a78e398b-f8c7-56c1-a2c0-deedd720557b","fields":{"slug":"/contents/posts/2023-09-17/"},"frontmatter":{"title":"신뢰할 수 없는 코드를 쓰면서 불변성 지키기"}}},{"node":{"id":"a5b16fda-7eb6-5089-a91c-9231b9dd28d0","fields":{"slug":"/contents/posts/2023-10-01/"},"frontmatter":{"title":"mac에 rocky linux 설치하기"}}},{"node":{"id":"87297bfb-cf0a-5b5e-937c-f2aaa8295258","fields":{"slug":"/contents/posts/2023-10-09/"},"frontmatter":{"title":"nx로 모노레포 구축하기 (삽질기록)"}}},{"node":{"id":"29deefa4-82bd-5722-83d0-c11c3cf808d8","fields":{"slug":"/contents/posts/2023-10-22/"},"frontmatter":{"title":"yalc: npm publish없이 패키지를 테스트할 수 있는 방법"}}}]},"previous":{"fields":{"slug":"/contents/posts/2023-07-05/"},"frontmatter":{"title":"get image api 오류 트러블 슈팅"}},"next":{"fields":{"slug":"/contents/posts/2023-08-13/"},"frontmatter":{"title":"why can’t use window in vue template?"}}},"pageContext":{"id":"a5ffa0e0-ac0f-592c-a606-ef5545b8d5f5","series":null,"previousPostId":"e0593ebb-38b6-5d5b-bd37-63a6740ea2e8","nextPostId":"dba241d0-3594-5a1d-a854-be8184071124"}},"staticQueryHashes":[],"slicesMap":{}}